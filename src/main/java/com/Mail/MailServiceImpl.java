package com.Mail;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.core.io.FileSystemResource;import org.springframework.mail.SimpleMailMessage;import org.springframework.mail.javamail.JavaMailSender;import org.springframework.mail.javamail.MimeMessageHelper;import org.springframework.stereotype.Component;import javax.mail.internet.MimeMessage;import java.io.File;@Componentpublic class MailServiceImpl {    private final Logger logger = LoggerFactory.getLogger(this.getClass());    @Autowired    private JavaMailSender javaMailSender;    @Value("${mail.fromMail.addr}")    private String from;    //基础    public void sendSimpleMail(String to, String subject, String content) {        SimpleMailMessage simpleMailMessage = new SimpleMailMessage();        simpleMailMessage.setTo(to);        simpleMailMessage.setFrom(from);        simpleMailMessage.setSubject(subject);        simpleMailMessage.setText(content);        try {            javaMailSender.send(simpleMailMessage);            logger.info("简单邮件已经发送。");        } catch (Exception e) {            logger.error("发送简单邮件时发生异常！", e);        }    }    //html    public void sendHtmlMail(String to, String subject, String content) {        MimeMessage mimeMessage = javaMailSender.createMimeMessage();        try {            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);            helper.setTo(to);            helper.setFrom(from);            helper.setSubject(subject);            helper.setText(content, true);            javaMailSender.send(mimeMessage);            logger.info("简单邮件已经发送。");        } catch (Exception e) {            logger.error("发送简单邮件时发生异常！", e);        }    }    //附件    public void sendAttachmentsMail(String to, String subject, String content, String filePath) {        MimeMessage mimeMessage = javaMailSender.createMimeMessage();        try {            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);            helper.setTo(to);            helper.setFrom(from);            helper.setSubject(subject);            helper.setText(content, true);            FileSystemResource fileSystemResource = new FileSystemResource(new File(filePath));            String fileName = "index2.js";            helper.addAttachment(fileName, fileSystemResource);            javaMailSender.send(mimeMessage);            logger.info("简单邮件已经发送。");        } catch (Exception e) {            logger.error("发送简单邮件时发生异常！", e);        }    }    //静态资源    public void sendInlineResourceMail(String to, String subject, String content, String rscPath, String rscId) {        MimeMessage mimeMessage = javaMailSender.createMimeMessage();        try {            MimeMessageHelper helper = new MimeMessageHelper(mimeMessage, true);            helper.setTo(to);            helper.setFrom(from);            helper.setSubject(subject);            helper.setText(content, true);            FileSystemResource fileSystemResource = new FileSystemResource(new File(rscPath));            helper.addInline(rscId, fileSystemResource);            javaMailSender.send(mimeMessage);            logger.info("简单邮件已经发送。");        } catch (Exception e) {            logger.error("发送简单邮件时发生异常！", e);        }    }}